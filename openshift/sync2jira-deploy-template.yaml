apiVersion: v1
kind: Template
metadata:
  name: sync2jira-deploy-template
  app: sync2jira-deploy
labels:
  app: sync2jira-deploy
parameters:
- name: CERT
  displayName: Cert to be used to access ACTIVEMQ (base64)
  required: true
- name: KEY
  displayName: Key to be used to access ACTIVEMQ (base64)
  required: true
- name: ACTIVEMQ_QUERY
  displayName: Query that we should be using
  required: true
- name: ACTIVEMQ_URL_1
  displayName: Message Bus URL are tuple, this is the first part of that tuple
  required: true
- name: ACTIVEMQ_URL_2
  displayName: Message Bus URL are tuple, this is the second part of that tuple
  required: true
- name: ACTIVEMQ_REPO_NAME
  displayName: Repo (or topic/category) that we should be listening for
  required: true
- name: ENDPOINT
  displayName: Openshift endpoint
  required: true
- name: NAMESPACE
  displayName: Openshift namespace to use
  required: true
- name: SEND_EMAILS
  displayName: Flag to send emails (0/1)
  required: true
  value: '1'
- name: RCM_TOOLS_REPO
  displayName: RCM Toold Repo URL
  required: true
- name: CA_URL
  displayName: CA_URL that points to ca_certs
  required: true
- name: GITHUB_URL
  displayName: GitHub .git URL to our Sync2Jira repo
  requiered: true
- name: OPENSHIFT_TOKEN
  displayName: OpenShift-prod token to be used to tag new images (base64)
  required: true
- name: OPENSHIFT_TOKEN_STAGE
  displayName: OpenShift-stage token to be used to tag new images (base64)
  required: true
- name: DEFAULT_SERVER
  displayName: Default server to use for mailing
  required: true
- name: DEFAULT_FROM
  displayName: Default from to use for mailing
  required: true
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: sync2jira-deploy
    annotations:
      openshift.io/display-name: sync2jira-deploy
    name: sync2jira-deploy
    namespace: sync2jira-deploy
- apiVersion: v1
  kind: Secret
  metadata:
    name: sync2jira-deploy-secrets
    labels:
      app: sync2jira-deploy
      service: sync2jira-deploy
  data:
    deploy.crt: |-
      ${CERT}
    deploy.key: |-
      ${KEY}
    openshift-token: |-
      ${OPENSHIFT_TOKEN}
    openshift-token-stage: |-
      ${OPENSHIFT_TOKEN_STAGE}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: sync2jira-deploy
    labels:
      app: sync2jira-deploy
      service: sync2jira-deploy
  spec:
    source:
      git:
        uri: ${GITHUB_URL}
        ref: continuous-deployment
    strategy:
      type: Docker
      dockerStrategy:
        buildArgs:
          - name: RCM_TOOLS_REPO
            value: ${RCM_TOOLS_REPO}
        dockerfilePath: Dockerfile.deploy
    output:
      to:
        kind: ImageStreamTag
        name: sync2jira-deploy:latest
    runPolicy: Serial
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: sync2jira-deploy
    labels:
      service: sync2jira-deploy
      app: sync2jira-deploy
  spec:
    selector:
      service: sync2jira-deploy
    template:
      metadata:
        labels:
          app: sync2jira-deploy
          service: sync2jira-deploy
      spec:
        containers:
        - name: sync2jira-deploy
          image: sync2jira-deploy:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: secrets
              mountPath: usr/local/src/sync2jira/docs # Overwrite the doc folder, we don't need it when we're running
              readOnly: true
            - name: fedmsgd-volume
              mountPath: /etc/fedmsg.d
              readOnly: true
          env:
            - name: SEND_EMAILS
              value: ${SEND_EMAILS}
            - name: CERT
              value: usr/local/src/sync2jira/docs/deploy.crt
            - name: KEY
              value: usr/local/src/sync2jira/docs/deploy.key
            - name: CA_CERTS
              value: /etc/pki/tls/certs/ca-bundle.crt # Downloaded during docker-entrypoint.sh
            - name: ACTIVEMQ_QUERY
              value: ${ACTIVEMQ_QUERY}
            - name: ACTIVEMQ_URL_1
              value: ${ACTIVEMQ_URL_1}
            - name: ACTIVEMQ_URL_2
              value: ${ACTIVEMQ_URL_2}
            - name: ACTIVEMQ_REPO_NAME
              value: ${ACTIVEMQ_REPO_NAME}
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  name: sync2jira-deploy-secrets
                  key: openshift-token
            - name: STAGE_TOKEN
              valueFrom:
                secretKeyRef:
                  name: sync2jira-deploy-secrets
                  key: openshift-token-stage
            - name: ENDPOINT
              value: ${ENDPOINT}
            - name: NAMESPACE
              value: ${NAMESPACE}
            - name: DEFAULT_FROM
              value: ${DEFAULT_FROM}
            - name: DEFAULT_SERVER
              value: ${DEFAULT_SERVER}
            - name: RCM_TOOLS_REPO
              value: ${RCM_TOOLS_REPO}
            - name: CONFLUENCE_SPACE
              value: mock_confluence_space
            - name: CA_URL
              value: ${CA_URL}
            - name: SYNC2JIRA_PNTJIRA_PASS
              valueFrom:
                secretKeyRef:
                  key: jira_pnt_pass
                  name: sync2jira-secret
            - name: SYNC2JIRA_OMEGAPRIME_PASS
              valueFrom:
                secretKeyRef:
                  key: jira_omegaprime_pass
                  name: sync2jira-secret
            - name: SYNC2JIRA_GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  key: github_token
                  name: sync2jira-secret
        volumes:
          - name: secrets
            secret:
              secretName: sync2jira-deploy-secrets
          - name: fedmsgd-volume
            configMap:
              name: fedmsgd
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - sync2jira-deploy
          from:
            kind: ImageStreamTag
            name: sync2jira-deploy:latest